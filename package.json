{
  "name": "co-locate",
  "displayName": "co-locate",
  "description": "",
  "version": "0.6.0",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "coLocate.navigateCommand",
        "title": "Navigate to related..."
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "coLocate.navigateCommand",
          "when": "!explorerResourceIsFolder",
          "group": "navigation@1"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "shortcutsTreeView",
          "name": "Shortcuts"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Co-Locate",
      "properties": {
        "coLocate.fileTypes": {
          "description": "Defines the file types in a project that will be evaluated for co-location linking",
          "title": "Co-Location Pattern Group",
          "scope": "window",
          "type": "array",
          "minItems": 2,
          "default": [
            {
              "name": "Source",
              "marker": "ðŸ§¾",
              "regex": "\\/src\\/(?!\\.test\\.|\\.spec\\.)(.+)\\.(js|jsx|ts|tsx)$"
            },
            {
              "name": "Test",
              "marker": "ðŸ§ª",
              "regex": "\\/test\\/(.+)\\.(test|spec)\\.(js|jsx|ts|tsx)$"
            }
          ],
          "items": {
            "description": "A pattern to match files to be co-located, for a match to occur the file paths must match exactly from the text after the given prefix until before the given suffix.\n\nIf no prefix or suffix is given then the path start or end will need to match exactly.",
            "type": "object",
            "default": {},
            "properties": {
              "name": {
                "description": "A name for the type of file matched by the pattern, used in the UI",
                "type": "string",
                "default": ""
              },
              "marker": {
                "description": "A marker (e.g. an emoji) to show as badges in the file explorer on files related to this type of file",
                "type": "string",
                "default": "",
                "maxLength": 1
              },
              "regex": {
                "markdownDescription": "A regex that should match relevant files and capture the part of the path that will be constant for sibling pattern group items (aka the key path).\n\nThe key path capture group can either be:\n1. the first unnamed group\n2. a group named 'key' (for example `\\\\/(test|tests)\\\\/(?<key>.*)\\\\.test\\\\.ts$`).\n\n**NOTE** This should only match 1 related file type, if multiple can be matched then they should be defined as separate types",
                "type": "string",
                "default": ""
              }
            },
            "required": [
              "name",
              "marker",
              "regex"
            ],
            "additionalProperties": false
          },
          "additionalProperties": false
        },
        "coLocate.ignoreRegexs": {
          "description": "Defines the patterns of files to ignore",
          "scope": "window",
          "type": "array",
          "default": [
            "\\/node_modules\\/"
          ],
          "items": {
            "type": "string",
            "default": ""
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "scripts": {
    "vscode:package": "echo 'Packaging...' && vsce package",
    "vscode:prepublish": "npm run lint && npm run test",
    "vscode:publish:patch": "echo 'Publishing patch version...' && vsce publish patch --pre-release",
    "vscode:publish:minor": "echo 'Publishing minor version...' && vsce publish minor --pre-release",
    "vscode:publish:major": "echo 'Publishing major version...' && vsce publish major --pre-release",
    "compile": "echo 'Compiling...' tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "echo 'Linting...' && eslint src --ext ts --fix --cache --report-unused-disable-directives",
    "pretest": "npm run compile",
    "test": "echo 'Testing...' && vitest run --coverage -- ",
    "pretest:changed": "npm run compile",
    "test:changed": "echo 'Testing...' && vitest run --coverage --changed HEAD~1"
  },
  "devDependencies": {
    "@eliasm307/config": "^0.18.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vitest/coverage-c8": "^0.31.0",
    "@vscode/test-electron": "^2.3.0",
    "@vscode/vsce": "^2.19.0",
    "eslint": "^8.39.0",
    "typescript": "^5.0.4",
    "vitest": "^0.31.0",
    "yarn": "^1.22.19"
  },
  "publisher": "ecm",
  "vsce": {
    "dependencies": true,
    "yarn": false
  }
}
